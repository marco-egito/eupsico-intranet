<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Painel Financeiro - EuPsico</title>
    <style>
        body { font-family: Arial, sans-serif; background-color: #f4f4fs9; margin: 0; }
        .main-container { display: flex; min-height: 100vh; }
        .sidebar { width: 220px; background-color: #004a7f; color: white; padding: 15px; }
        .sidebar h2 { text-align: center; }
        .sidebar ul { list-style: none; padding: 0; }
        .sidebar ul li button {
            width: 100%; background: none; border: none; color: white; padding: 12px; text-align: left;
            cursor: pointer; font-size: 1em; border-radius: 5px;
        }
        .sidebar ul li button:hover, .sidebar ul li button.active { background-color: #005a87; }
        .content { flex-grow: 1; padding: 20px; }
        #app-container { background-color: white; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); }
        .hidden { display: none; }
    </style>
</head>
<body>

    <div id="auth-view" style="text-align: center; padding-top: 50px;">
        <h2>Painel Financeiro</h2>
        <p id="auth-message">Verificando autenticação...</p>
        <button id="login-button" class="hidden">Login com Google</button>
    </div>

    <div id="app-view" class="main-container hidden">
        <nav class="sidebar">
            <h2>Financeiro</h2>
            <ul>
                <li><button class="nav-button" data-page="dashboard_financeiro.html">Dashboard</button></li>
                <li><button class="nav-button" data-page="lancamentos.html">Lançamentos</button></li>
                <li><button class="nav-button" data-page="cobranca_mensal.html">Cobrança Mensal</button></li>
                <li><button class="nav-button" data-page="controle_pagamentos.html">Controle de Pagamentos</button></li>
                <li><button class="nav-button" data-page="resumo_horas.html">Resumo de Horas</button></li>
                <li><button class="nav-button" data-page="devedores.html">Devedores</button></li>
                <li><button class="nav-button" data-page="acordos.html">Acordos</button></li>
                <li><button class="nav-button" data-page="repasse_profissionais.html">Repasse Profissionais</button></li>
                <li><button class="nav-button" data-page="envio_comprovantes.html">Envio de Comprovantes</button></li>
                <hr>
                <li><button class="nav-button" data-page="configuracoes.html">Configurações</button></li>
                <li><button class="nav-button" data-page="relatorios_backup.html">Relatórios e Backup</button></li>
            </ul>
            <button id="logout-button" style="width: 100%; margin-top: 20px; background-color:#dc3545; border:none; color:white; padding:10px; cursor:pointer; border-radius: 5px;">Sair</button>
        </nav>
        <main class="content">
            <div id="app-container">Carregando...</div>
        </main>
    </div>

    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore-compat.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.8.1/jspdf.plugin.autotable.min.js"></script>

    <script>
        // Use a mesma configuração em todas as suas páginas
        const firebaseConfig = {
            apiKey: "AIzaSyCLeWW39nqxsdv1YD-CNa9RSTv05lGHJxM",
            authDomain: "eupsico-agendamentos-d2048.firebaseapp.com",
            databaseURL: "https://eupsico-agendamentos-d2048-default-rtdb.firebaseio.com",
            projectId: "eupsico-agendamentos-d2048",
            storageBucket: "eupsico-agendamentos-d2048.appspot.com",
            messagingSenderId: "1041518416343",
            appId: "1:1041518416343:web:3b972c212c52a59ad7bb92"
        };
        
        firebase.initializeApp(firebaseConfig);
        const auth = firebase.auth();
        const db = firebase.firestore(); // USANDO FIRESTORE!

        const authView = document.getElementById('auth-view');
        const appView = document.getElementById('app-view');
        const loginButton = document.getElementById('login-button');
        const logoutButton = document.getElementById('logout-button');
        const appContainer = document.getElementById('app-container');

        // Função para carregar o conteúdo da página
        async function loadPage(page) {
            try {
                appContainer.innerHTML = 'Carregando...';
                const response = await fetch(page);
                if (!response.ok) throw new Error('Página não encontrada.');
                
                const pageContent = await response.text();
                appContainer.innerHTML = pageContent;

                // Executa os scripts da página carregada
                const scripts = appContainer.querySelectorAll('script');
                scripts.forEach(script => {
                    const newScript = document.createElement('script');
                    newScript.text = script.innerText;
                    document.body.appendChild(newScript).parentNode.removeChild(newScript);
                });
            } catch (error) {
                appContainer.innerHTML = `<p style="color:red;">Erro ao carregar a página: ${error.message}</p>`;
                console.error(error);
            }
        }

        // Lógica de Autenticação
        auth.onAuthStateChanged(async (user) => {
            if (user) {
                const userDoc = await db.collection('usuarios').doc(user.uid).get();
                const funcoes = userDoc.exists ? userDoc.data().funcoes : [];

                // Somente admin ou financeiro podem acessar
                if (funcoes.includes('admin') || funcoes.includes('financeiro')) {
                    authView.classList.add('hidden');
                    appView.classList.remove('hidden');
                    // Carrega a primeira página por padrão
                    document.querySelector('.nav-button').click(); 
                } else {
                    authView.classList.remove('hidden');
                    appView.classList.add('hidden');
                    document.getElementById('auth-message').innerText = 'Acesso Negado. Você não tem permissão.';
                }
            } else {
                authView.classList.remove('hidden');
                appView.classList.add('hidden');
                document.getElementById('auth-message').innerText = 'Por favor, faça o login para continuar.';
                loginButton.classList.remove('hidden');
            }
        });

        // Event Listeners
        loginButton.addEventListener('click', () => {
            const provider = new firebase.auth.GoogleAuthProvider();
            auth.signInWithPopup(provider);
        });

        logoutButton.addEventListener('click', () => auth.signOut());

        document.querySelectorAll('.nav-button').forEach(button => {
            button.addEventListener('click', (e) => {
                document.querySelectorAll('.nav-button').forEach(btn => btn.classList.remove('active'));
                e.target.classList.add('active');
                const pageFile = e.target.getAttribute('data-page');
                loadPage(pageFile);
            });
        });

    </script>
</body>
</html>
